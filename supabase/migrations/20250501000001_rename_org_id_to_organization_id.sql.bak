-- This migration renames org_id to organization_id in the experiences table to follow the naming convention
-- Created: May 1st, 2025

-- First check if we need to make the change
DO $$
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'experiences' AND column_name = 'org_id') THEN
        -- Temporarily disable RLS for the update
        ALTER TABLE experiences DISABLE ROW LEVEL SECURITY;

        -- Add organization_id column if it doesn't exist
        ALTER TABLE experiences ADD COLUMN IF NOT EXISTS organization_id UUID;
        
        -- Copy data from org_id to organization_id
        UPDATE experiences SET organization_id = org_id WHERE organization_id IS NULL;
        
        -- Add foreign key constraint
        ALTER TABLE experiences ADD CONSTRAINT experiences_organization_id_fkey 
            FOREIGN KEY (organization_id) 
            REFERENCES organizations(id)
            ON DELETE CASCADE
            NOT VALID;
            
        -- Re-enable RLS
        ALTER TABLE experiences ENABLE ROW LEVEL SECURITY;
        
        -- Update the RLS policy to use organization_id
        DROP POLICY IF EXISTS "Organizations can manage their experiences" ON experiences;
        CREATE POLICY "Organizations can manage their experiences" 
          ON experiences
          USING (organization_id IN (
            SELECT organization_id FROM organization_users 
            WHERE user_id = auth.uid()
          ));
    END IF;
END
$$;
